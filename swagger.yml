openapi: 3.0.1
info:
  title: API Gateway service API endpoints
  description: API Gateway from Message in a Bottle with Microservices
  version: "0.1"
servers:
- url: /

paths:
  /:
    get:
      tags: [ Home ]
      summary: Return the home page of the web app
      responses:
        200:
          description: Renders the index.html template

  /login:
    tags: [ Authentication ]
    get:
      summary: Shows the login page and its form
      responses:
        200:
          description: Renders the login.html template
    post:
      summary: Handles the login of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        200:
          description: Reloads the login.html page with a warning, in case the user credentials were invalid
        302:
          description: Redirects to the correct profile page, depending on the type of the user

  /relogin:
    get:
      tags: [ Authentication ]
      summary: Utility route used to handle the user's session expiration
      responses:
        200:
          description: Calls the login method
  /user/start/{firstletter}:
    get:
      tags: [ Profile ]
      summary: Retrieve the user with firstname starting with firstletter
      parameters:
      - name: firstletter
        in: path
        description: first letter of firstname
        required: true
        schema:
          type: string
      responses:
        200:
          description: Retrieve the user
        404:
          description: No user matching the parameter
  /user/{id}:
    get:
      tags: [ Profile ]
      summary: Shows the profile page of the customer specified by the id
      parameters:
      - name: id
        in: path
        description: Customer's unique identifier
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Renders the customer_profile template, filled with the ssn form and the user's reservations
        302:
          description: Redirects to the homepage, in case the user accessing the profile is not its owner
    
    put:
      summary: Updates the fields for the customer depending on its id
      tags:
        - Users
      parameters:
        - name: id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: the email field for the user
                password:
                  type: string
                  description: the password field for the user
                phone:
                  type: string
                  description: the phone field for the user
              required:
                - email
                - password
                - phone
      responses:
        200:
          description: Renders the update_customer template, to allow the customer to modify its data
        302:
          description: Redirects to the customer profile page
  /logout:
    get:
      tags: [ Authentication ]
      summary: Logs out the logged user
      responses:
        302:
          description: Redirects to the homepage
  /myaccount:
    get:
      tags: [ UserProfile ]
      summary: Renders the page with user data
      responses:
        200:
          description: Redirect to the user profile
    delete:
      tags: [ UserProfile ]
      summary: Unregister user setting is_active to False
      responses:
        200:
          description: Redirect to the home page 
  
  /myaccount/set_content:
    put:
      tags: [UserProfile]
      summary: Update the value for the content filter
      requestBody:
        required: True
        content:
          application/json:
            schema: 
              type: object
              properties: 
                filter: 
                  type: bool
                  description: content filter that allow to show or not bad words
              required: 
                - filter
  /user/:
    get:
      tags: [ User ]
      summary: This method allows to retrieve the sign up page for a new user
      parameters:
        - name: type_
          description: type of the user
          in: path
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Renders the create_user template, filled with the fiels for the user's data
        302:
          description: Redirects to the correct profile page, depending on the type of the user
    post:
      summary: Add a new customer
      tags: [ User ]
      parameters:
        - name: type_
          description: type of the user
          in: path
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: the email field for the user
                password:
                  type: string
                  description: the password field for the user
                social_number:
                  type: string
                  description: the social number field for the user
                firstname: 
                  type: string
                  description: the firstname field for the user
                lastname: 
                  type: string
                  description: the lastname field for the user
                birthdate:
                  type: string
                  description: the birthday field for the user
                phone:
                  type: string
                  description: the phone field for the user
              required:
                - email
                - password
      responses:
        302:
          description: Redirects to the correct profile page, depending on the type of the user
  /user/{user_id}:
    delete:
        tags: [ User ]
        description: Delete a user by its id
        parameters:
          - name: user_id
            description: User Unique ID
            in: path
            required: true
            schema:
              type: integer
              format: int64
        responses:
          302:
            description: User deleted, it redirects to the index page
  /lottery:
    get:
      tags: [ Lottery ]
      summary: Renders the homepage of the lottery 
      responses:
        200:
          description: Renders the page with the user informations
        404:
          description: No user found
          
  /message/new:
    get:
      tags: [ Message ]
      summary: This method allows to retrieve the new message page 
      responses:
        200:
          description: Renders the new message template
  /message/draft:
    post:
      summary: Create a new draft message
      tags: [ Message ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                payload:
                  type: object
                  properties:
                    title:
                      type: string
                      description: Message title
                      example: 'New Message to you'
                    content:
                      type: string
                      description: Text of the message
                      example: 'Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC'
                    date_of_delivery:
                      type: string
                      description: Date when the message will be sent
                      example: '12-01-2022'
                    time_of_delivery:
                      type: string
                      description: Time when the message will be sent
                      example: '10:21'
                    font:
                      type: string
                      description: Description of the font of the message
                      example: 'Arial'
                    destinator:
                      type: array
                      items:
                        type: integer
                      description: List of users who will receive the message
                      example: [2,1]
                sender:
                  type: integer
                  description: Id of the message's sender
                  example: 1
                message_id:
                  type: integer
                  description: Id of the message
                  example: 0
                delete_image_ids:
                  type: array
                  items:
                    type: integer
                  description: List of users who will receive the message
                  example: []
                delete_user_ids:
                  type: array
                  items:
                    type: integer
                  description: List of users who will receive the message
                  example: []
                filename:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        302:
          description: Redirects to the correct profile page, depending on the type of the user
  /edit/{message_id}:
    get:
        tags: [ Draft ]
        description: Allow user to modify drafted messages
        parameters:
          - name: message_id
            description: Message Unique ID
            in: path
            required: true
            schema:
              type: integer
              format: int64
        responses:
          200:
            description: Correct edit draft message
